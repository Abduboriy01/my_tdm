version: "3.8"

services:

  migrate:
    image: migrate/migrate
    # networks:
    #   - new
    volumes:
      - ./migrations:/migrations
    command: 
      ["-path", "/migrations", "-database", "postgres://postgres:newpassword@database-1.cqgpi523wr5p.ap-south-1.rds.amazonaws.com:5432/postdb?sslmode=disable", "up"]

  user_service:
    container_name: user_service
    build: ./user-service-shu
    depends_on:
      - "migrate"
      - "kafka"
      # - "dbpost"
    expose:
      - "8098"
    ports:
      - "8098:8098"

  post_service:
    container_name: post_service
    build: ./post-service
    depends_on:
       - "migrate"
    expose:
      - "8908"
    ports:
      - "8908:8908"

  api:
    container_name: api
    build: ./api-gateway
    depends_on:
      - "redisdb"
      # - "user_service"
      # - "post_service"
    ports:
      - "8080:8080"

  # dbpost:
  #   container_name: dbpost
  #   image: postgres:14.1
  #   environment:
  #     POSTGRES_DATABASE: postdb
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: 12345678
  #   expose:
  #     - "5434"
  #   ports:
  #     - "5434:5434"
  #   volumes:
  #     - dbdata:/var/lib/postgresql/data
  #   command: -p 5434

  

  redisdb:
    container_name: redisdb
    image: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - "zookeeper"
    ports:
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
volumes:
  dbdata:

  
  